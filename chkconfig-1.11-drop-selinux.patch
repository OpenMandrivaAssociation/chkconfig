diff -Naur chkconfig-1.11/Makefile chkconfig-1.11.tpg/Makefile
--- chkconfig-1.11/Makefile	2018-09-10 13:28:29.000000000 +0000
+++ chkconfig-1.11.tpg/Makefile	2018-09-28 20:44:04.652743538 +0000
@@ -2,7 +2,7 @@
 TAG = $(VERSION)
 
 CFLAGS=-g -Wall $(RPM_OPT_FLAGS) -D_GNU_SOURCE
-LDFLAGS+=-g
+LDFLAGS+=-g -lselinux -lsepol
 MAN=chkconfig.8 ntsysv.8 alternatives.8
 PROG=chkconfig
 BINDIR = /sbin
@@ -24,12 +24,12 @@
 	done && test -z "$$fail"
 
 chkconfig: $(OBJS)
-	$(CC) $(LDFLAGS) -o chkconfig $(OBJS) -lpopt -lselinux -lsepol
+	$(CC) $(LDFLAGS) -o chkconfig $(OBJS) -lpopt
 
 alternatives: alternatives.o
 
 ntsysv: $(NTOBJS)
-	$(CC) $(LDFLAGS) -o ntsysv $(NTOBJS) -lnewt -lpopt $(LIBMHACK) -lselinux -lsepol
+	$(CC) $(LDFLAGS) -o ntsysv $(NTOBJS) -lnewt -lpopt $(LIBMHACK)
 
 chkconfig.o: chkconfig.c leveldb.h
 	$(CC) $(CFLAGS) -DVERSION=\"$(VERSION)\" -c chkconfig.c
diff -Naur chkconfig-1.11/leveldb.c chkconfig-1.11.tpg/leveldb.c
--- chkconfig-1.11/leveldb.c	2018-09-10 13:28:29.000000000 +0000
+++ chkconfig-1.11.tpg/leveldb.c	2018-09-28 20:46:15.674741726 +0000
@@ -19,11 +19,8 @@
 #include <errno.h>
 #include <fcntl.h>
 #include <glob.h>
-#include <libgen.h>
 #include <libintl.h>
 #include <locale.h>
-#include <selinux/label.h>
-#include <selinux/selinux.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -41,47 +38,6 @@
 
 #include "leveldb.h"
 
-int selinux_restore(const char *name) {
-    struct selabel_handle *hnd = NULL;
-    struct stat buf;
-    security_context_t newcon = NULL;
-    int r = -1;
-
-    hnd = selabel_open(SELABEL_CTX_FILE, NULL, 0);
-    if (hnd == NULL)
-        goto out;
-
-    r = stat(name, &buf);
-    if (r < 0)
-        goto out;
-
-    r = selabel_lookup_raw(hnd, &newcon, name, buf.st_mode);
-    if (r < 0)
-        goto out;
-
-    r = setfilecon_raw(name, newcon);
-    if (r < 0)
-        goto out;
-
-    r = 0;
-
-out:
-    if (hnd)
-        selabel_close(hnd);
-    if (newcon)
-        freecon(newcon);
-
-    /* Lets ignore any errors when selinux is disabled.
-     * We still want to run the previous code though,
-     * since we only need selinux policy.
-     * Selinux itself can be turned off.
-     */
-    if (!is_selinux_enabled())
-        return 0;
-
-    return r;
-}
-
 int parseLevels(char *str, int emptyOk) {
     char *chptr = str;
     int rc = 0;
@@ -848,7 +804,6 @@
     char *buf, *ptr, *tmp;
     struct stat sb;
     mode_t mode;
-    int r;
 
     if (on == -1) {
         on = s.enabled ? 1 : 0;
@@ -896,11 +851,6 @@
     }
     close(newfd);
     unlink(oldfname);
-    r = rename(newfname, oldfname);
-    if (selinux_restore(oldfname) != 0)
-        fprintf(stderr, _("Unable to set selinux context for %s: %s\n"),
-                oldfname, strerror(errno));
-    return (r);
 }
 
 int doSetService(struct service s, int level, int on) {
@@ -933,7 +883,7 @@
 
 int systemdIsInit() {
     char *path = realpath("/sbin/init", NULL);
-    char *base = NULL;
+    char *base;
 
     if (!path)
         return 0;
